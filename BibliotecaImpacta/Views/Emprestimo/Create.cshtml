@model BibliotecaImpacta.Models.Emprestimo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cadastrar um novo emprestimo de livro</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="input-field col s3">
                <i class="material-icons prefix">view_list</i>
                @Html.DropDownListFor(model => model.ClienteId, new SelectList(ViewBag.Clientes, "Value", "Text"), "Selecione um Cliente")
            </div>
        </div>

        <div class="row">
            <div class="input-field col s3">
                <i class="material-icons prefix">view_list</i>
                @Html.DropDownListFor(model => model.LivroId, new SelectList(ViewBag.Livros, "Value", "Text"), "Selecione um Livro")
            </div>
        </div>



        <div class="row">
            <div class="input-field col s3">
                <i class="material-icons prefix">alarm_on</i>
                @Html.EditorFor(model => model.DataEmprestimo, new { htmlAttributes = new { @class = "alarm_on data" } })
                @Html.ValidationMessageFor(model => model.DataEmprestimo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="input-field col s3">
                <i class="material-icons prefix">alarm_off</i>
                @Html.EditorFor(model => model.DataDevolucao, new { htmlAttributes = new { @class = "alarm_off data" } })
                @Html.ValidationMessageFor(model => model.DataDevolucao, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group center-align">
            <button class="btn waves-effect waves-light" type="submit" name="action">
                Cadastrar
                <i class="material-icons right">send</i>
            </button>
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {
        $('.data').datepicker({ format: 'dd/mm/yyyy' });
        $.extend($.fn.datepicker.format, {
            monthsFull: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthsSort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            weekdaysFull: ['Domingo', 'Segunda-Feira', 'Terça-Feira', 'Quarta-Feira', 'Quinta-Feira', 'Sexta-Feira', 'Sabado'],
            weekdaysSort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],
            today: 'hoje',
            clear: 'limpar',
            close: 'fechar',
            formatSubmit: 'dd/mm/yyyy'

        });
       
    });
</script>
